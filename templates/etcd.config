name: {{ansible_hostname}}-{{app.key}}
data-dir: /app/{{app.value.etcd.user.user}}/etcd/var/data
listen-peer-urls: http://0.0.0.0:{{app.value.etcd.configs.ports.peer}}
listen-client-urls: http://0.0.0.0:{{app.value.etcd.configs.ports.client}}
{% if not _etcd_need_bootstrap %}
initial-cluster: {{ansible_hostname}}-{{app.key}}=http://{{ansible_default_ipv4.address}}:{{app.value.etcd.configs.ports.peer}}
{%-   for node in _etcd_nodes_list|sort %}
{%     if node[0] not in ansible_all_ipv4_addresses %}
,node{{loop.index}}=http://{{node[0]}}:{{node[1]}}
{%-     endif %}
{%   endfor %}
{% endif %}

{#
{% set adverts = [] %}
{% for advert in app.value.etcd.configs.advertise %}
{%   if advert == 'hostname' %}
{{     adverts.append(ansible_hostname) }}
{%   elif 'addresses' in advert %}
{%     for address in advert['addresses'] %}
{%       if address == 'default' %}
{{         adverts.append(ansible_default_ipv4.address) }}
{%       elif address == 'all' %}
{%         for address_loop in ansible_all_ipv4_addresses %}
{{           adverts.append(address_loop) }}
{%         endfor %}
{%       else %}
{{         adverts.append(address) }}
{%       endif %}
{%     endfor %}
{%   endif %}
{% endfor %}

advertise-client-urls: {% for advert in adverts%}http://{{advert}}:{{app.value.etcd.configs.ports.client}}{{',' if not loop.last}}{% endfor %}

initial-advertise-peer-urls: {% for advert in adverts%}http://{{advert}}:{{app.value.etcd.configs.ports.peer}}{{',' if not loop.last}}{% endfor %}
#}
advertise-client-urls: http://{{ansible_default_ipv4.address}}:{{app.value.etcd.configs.ports.client}}

initial-advertise-peer-urls: http://{{ansible_default_ipv4.address}}:{{app.value.etcd.configs.ports.peer}}

initial-cluster-state: {{'new' if _etcd_need_bootstrap else 'existing'}}
